CREATE OR REPLACE PACKAGE BODY nwt_bl.bl_pid_img_trn
AS
   --
   /* -------------------- DESCRIPCION --------------------
   || Logica de negocio que define el concepto IMAGEN
   || Familia DEFINICION POLIZA
   */ -----------------------------------------------------
   --
   /* -------------------- VERSION = 1.01 -------------------- */
   --
   /* -------------------- MODIFICACIONES -----------------
   || 2013/05/09 - DALBERTA - v 1.00
   || Creacion
   */ ------------------------------------------------------
   --
   /* --------------------------------------------------
   || Aqui comienza la declaracion de variables GLOBALES
   */ --------------------------------------------------
   --
   /* -------------------------------------------------
   || Aqui comienza la declaracion de cursores GLOBALES
   */ -------------------------------------------------
   --
   /* ---------------------------------------------------
   || Aqui comienza la declaracion de constantes GLOBALES
   */ ---------------------------------------------------
   --
   c_pgm_nam CONSTANT nwt_o.d_trn.pgm_nam := 'bl_pid_img_trn';
   --
   /* ----------------------------------------------------
   || Aqui comienza la declaracion de subprogramas LOCALES
   */ ----------------------------------------------------
   --
   /* --------------------------------------------------------
   || Aqui comienza la declaracion de subprogramas del PACKAGE
   */ --------------------------------------------------------
   --
   /* -----------------------------------------------------
   || p_lck : ISD-214 - BLOQUEAR imagen por compañia
   || DALBERTA
   || Bloquea la imagen de forma logica y fisica para la
   || compania pasada por parametro, y asi evitar que sea
   || actualizado por otro usuario
   */ -----------------------------------------------------
   --
   PROCEDURE p_lck(pm_cmp_val     IN nwt_o.d_pid.cmp_val    ,
                   pm_fra_idn_val IN nwt_o.d_pid.fra_idn_val,
                   pm_lng_val     IN nwt_o.d_cmn.lng_val    ,
                   pm_ses_val     IN nwt_o.d_trn.ses_val    ,
                   pm_usr_val     IN nwt_o.d_thp.usr_val    )
   IS
   --
   lv_o_pid_img_p nwt_o.o_pid_img_p;
   --
   BEGIN
      --
      --@ dl_trn_dbg.p_set_mth_bgn (pm_pgm_nam => c_pgm_nam  ,
      --@                           pm_mth_nam => 'p_lck');
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_cmp_val'   ,
      --@                       pm_prm_val => pm_cmp_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_fra_idn_val'   ,
      --@                       pm_prm_val => pm_fra_idn_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_lng_val'   ,
      --@                       pm_prm_val => pm_lng_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_ses_val'   ,
      --@                       pm_prm_val => pm_ses_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_usr_val'   ,
      --@                       pm_prm_val => pm_usr_val     );
      --
      dl_trn_lck.p_lck(pm_prc_ses     => pm_ses_val                ,
                       pm_lck_idn     => pm_cmp_val||pm_fra_idn_val,
                       pm_lck_cnc     => 'IMG'                     ,
                       pm_lck_usr_val => pm_usr_val                ,
                       pm_lng_val     => pm_lng_val                );
      --
      BEGIN
      dl_pid_img.p_get_001(pm_cmp_val     => pm_cmp_val    ,
                           pm_lng_val     => pm_lng_val    ,
                           pm_o_pid_img_p => lv_o_pid_img_p);
      EXCEPTION
         WHEN nwt_o.e_trn.NOT_EXS THEN
            -- fin requisito 
            NULL;
      END;
      --
      EXCEPTION
       WHEN nwt_o.e_trn.LCK_NOT_WAT
        THEN
         --
         dl_trn_err.p_shw(pm_err_val => 20017                        ,
                          pm_lng_val => pm_lng_val                   ,
                          pm_tem_val => 'IDN'                        ,
                          pm_fld_val => pm_fra_idn_val               ,
                          pm_pgm_val => c_pgm_nam || '.p_lck'        );
         --
      --
      --@ dl_trn_dbg.p_set_mth_trm(pm_pgm_nam => c_pgm_nam    ,
      --@                          pm_mth_nam => 'p_lck'  );
      --
   END p_lck;
   --
   /* -----------------------------------------------------
   || p_lck_001 : ISD-623 - BLOQUEAR imagen por identificador marco
   || DALBERTA
   || Bloquea la imagen de forma logica y fisica para el
   || identificador marco pasado por parametro, y asi evitar
   || que sea actualizado por otro usuario
   */ -----------------------------------------------------
   --
   PROCEDURE p_lck_001(pm_cmp_val     IN nwt_o.d_pid.cmp_val    ,
                       pm_fra_idn_val IN nwt_o.d_pid.fra_idn_val,
                       pm_lng_val     IN nwt_o.d_cmn.lng_val    ,
                       pm_ses_val     IN nwt_o.d_trn.ses_val    ,
                       pm_usr_val     IN nwt_o.d_thp.usr_val    )
   IS
   --
   lv_o_pid_img_p nwt_o.o_pid_img_p;
   --
   BEGIN
      --
      --@ dl_trn_dbg.p_set_mth_bgn (pm_pgm_nam => c_pgm_nam  ,
      --@                           pm_mth_nam => 'p_lck_001');
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_cmp_val'   ,
      --@                       pm_prm_val => pm_cmp_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_fra_idn_val'   ,
      --@                       pm_prm_val => pm_fra_idn_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_lng_val'   ,
      --@                       pm_prm_val => pm_lng_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_ses_val'   ,
      --@                       pm_prm_val => pm_ses_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_usr_val'   ,
      --@                       pm_prm_val => pm_usr_val     );
      --
      dl_trn_lck.p_lck(pm_prc_ses     => pm_ses_val                ,
                       pm_lck_idn     => pm_cmp_val||pm_fra_idn_val,
                       pm_lck_cnc     => 'IMG'                     ,
                       pm_lck_usr_val => pm_usr_val                ,
                       pm_lng_val     => pm_lng_val                );
      --
      dl_pid_img.p_get_002(pm_cmp_val     => pm_cmp_val    ,
                           pm_fra_idn_val => pm_fra_idn_val,
                           pm_lng_val     => pm_lng_val    ,
                           pm_o_pid_img_p => lv_o_pid_img_p);
      --
      EXCEPTION
       WHEN nwt_o.e_trn.LCK_NOT_WAT
        THEN
         --
         dl_trn_err.p_shw(pm_err_val => 20017                        ,
                          pm_lng_val => pm_lng_val                   ,
                          pm_tem_val => 'IDN'                        ,
                          pm_fld_val => pm_fra_idn_val               ,
                          pm_pgm_val => c_pgm_nam || '.p_lck_001'    );
         --
      --
      --@ dl_trn_dbg.p_set_mth_trm(pm_pgm_nam => c_pgm_nam    ,
      --@                          pm_mth_nam => 'p_lck_001'  );
      --
   END p_lck_001;
   --
   /* -----------------------------------------------------
   || p_unl : ISD-217 - DESBLOQUEAR imagen
   || DALBERTA
   || Desbloquea la imagen de forma logica
   */ -----------------------------------------------------
   --
   PROCEDURE p_unl(pm_cmp_val     IN nwt_o.d_pid.cmp_val    ,
                   pm_fra_idn_val IN nwt_o.d_pid.fra_idn_val,
                   pm_lng_val     IN nwt_o.d_cmn.lng_val    ,
                   pm_ses_val     IN nwt_o.d_trn.ses_val    ,
                   pm_usr_val     IN nwt_o.d_thp.usr_val    )
   IS
   --
   BEGIN
      --
      --@ dl_trn_dbg.p_set_mth_bgn (pm_pgm_nam => c_pgm_nam  ,
      --@                           pm_mth_nam => 'p_unl');
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_cmp_val'   ,
      --@                       pm_prm_val => pm_cmp_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam       ,
      --@                       pm_prm_nam => 'pm_fra_idn_val',
      --@                       pm_prm_val => pm_fra_idn_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_lng_val'   ,
      --@                       pm_prm_val => pm_lng_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_ses_val'   ,
      --@                       pm_prm_val => pm_ses_val     );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam      ,
      --@                       pm_prm_nam => 'pm_usr_val'   ,
      --@                       pm_prm_val => pm_usr_val     );
      --
      dl_trn_lck.p_unl(pm_prc_ses => pm_ses_val                ,
                       pm_lck_idn => pm_cmp_val||pm_fra_idn_val,
                       pm_lck_cnc => 'IMG'                     ,
                       pm_lck_usr_val => pm_usr_val            ,
                       pm_lng_val => pm_lng_val                );
      --
      --@ dl_trn_dbg.p_set_mth_trm(pm_pgm_nam => c_pgm_nam    ,
      --@                          pm_mth_nam => 'p_unl'      );
      --
   END p_unl;
   --
END bl_pid_img_trn;
/
