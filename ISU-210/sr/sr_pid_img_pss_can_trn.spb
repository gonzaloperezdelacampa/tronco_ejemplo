CREATE OR REPLACE PACKAGE BODY nwt_sr.sr_pid_img_pss_can_trn
AS
   --
   /* -------------------- DESCRIPCION --------------------
   || Logica de servicios del concepto logico IMAGEN
   || de la familia DEFINICION POLIZA
   */ -----------------------------------------------------
   --
   /* -------------------- VERSION = 1.00 -------------------- */
   --
   /* -------------------- MODIFICACIONES -----------------
   || 2016/04/05 - SISAZA - v 1.00
   || Creacion
   */ -----------------------------------------------------
   --
   /* --------------------------------------------------
   || Aqui comienza la declaracion de variables GLOBALES
   */ --------------------------------------------------
   --
   /* -------------------------------------------------
   || Aqui comienza la declaracion de cursores GLOBALES
   */ -------------------------------------------------
   --
   /* ---------------------------------------------------
   || Aqui comienza la declaracion de constantes GLOBALES
   */ ---------------------------------------------------
   --
   c_pgm_nam CONSTANT nwt_o.d_trn.pgm_nam := 'sr_pid_img_pss_can_trn';
   --
   /* ----------------------------------------------------
   || Aqui comienza la declaracion de subprogramas LOCALES
   */ ----------------------------------------------------
   --
   /* --------------------------------------------------------
   || Aqui comienza la declaracion de subprogramas del PACKAGE
   */ --------------------------------------------------------
   --
   /* -----------------------------------------------------
   || f_chc_rev_all_och : ISD-2714 - OFRECER TRATAR imagen,
   ||                                marca devuelve todo,
   ||                                anulacion,
   ||                                orquestacion
   ||
   || SISAZA
   ||
   || Ofrecer el servicio de creacion de la imagen en un
   || movimiento de anulacion.
   || Tambien crear la variable global recibida por
   || parametro y le asigna el valor recibido.
   || Para este proceso de anulacion, se recibe la "marca
   || devuelve todo "necesaria en el proceso de anulacion
   */ -----------------------------------------------------
   --
   FUNCTION f_chc_rev_all_och (pm_cmp_val         IN            nwt_o.d_cmu.cmp_val        ,
                               pm_lob_val         IN            nwt_o.d_prt.lob_val        ,
                               pm_del_val         IN            nwt_o.d_prt.del_val        ,
                               pm_sbl_val         IN            nwt_o.d_prt.sbl_val        ,
                               pm_enr_typ_val     IN            nwt_o.d_trn.enr_typ_val    ,
                               pm_img_gnr_typ_val IN            nwt_o.d_trn.img_gnr_typ_val,
                               pm_ply_efc_dat     IN            nwt_o.d_trn.ply_efc_dat    ,
                               pm_o_trn_cnx_s     IN            nwt_o.o_trn_cnx_s          ,
                               pm_vrb_nam         IN            nwt_o.d_trn.fld_nam        ,
                               pm_vrb_val         IN            nwt_o.d_trn.fld_chr        )
      RETURN nwt_o.o_pid_img_p
   IS
      --
      lv_o_pid_img_p   nwt_o.o_pid_img_p;
      --
      lv_o_trn_cnx_s   nwt_o.o_trn_cnx_s;
      --
      lv_vod           nwt_o.d_trn.vod;
      --
   BEGIN
      --
      --@ dl_trn_dbg.p_set_mth_bgn (pm_pgm_nam => c_pgm_nam          ,
      --@                           pm_mth_nam => 'f_chc_rev_all_och');
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_cmp_val',
      --@                       pm_prm_val => pm_cmp_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_lob_val',
      --@                       pm_prm_val => pm_lob_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_del_val',
      --@                       pm_prm_val => pm_del_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_sbl_val',
      --@                       pm_prm_val => pm_sbl_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam       ,
      --@                       pm_prm_nam => 'pm_enr_typ_val',
      --@                       pm_prm_val => pm_enr_typ_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam           ,
      --@                       pm_prm_nam => 'pm_img_gnr_typ_val',
      --@                       pm_prm_val => pm_img_gnr_typ_val  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam       ,
      --@                       pm_prm_nam => 'pm_ply_efc_dat',
      --@                       pm_prm_val => pm_ply_efc_dat  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_vrb_nam',
      --@                       pm_prm_val => pm_vrb_nam  );
      --@
      --@ dl_trn_dbg.p_set_prm (pm_pgm_nam => c_pgm_nam   ,
      --@                       pm_prm_nam => 'pm_vrb_val',
      --@                       pm_prm_val => pm_vrb_val  );
      --@
      --
      lv_o_pid_img_p := dl_pid_img.f_inl_p;
      --
      lv_o_trn_cnx_s := pm_o_trn_cnx_s;
      --
      BEGIN
         -- 10. TRASPASAR propiedad sesion a variable, conjunto (NFU-353)
         lv_vod := dl_trn_vrb.f_lod_vrb_ses (pm_ses_val => pm_o_trn_cnx_s.ses_val);
         --
         -- 20. TRATAR imagen, marca devuelve todo, anulacion, orquestacion (ISD-2713)
         op_pid_img_pss_can.p_chc_rev_all_och (pm_cmp_val         => pm_cmp_val        ,
                                               pm_lob_val         => pm_lob_val        ,
                                               pm_del_val         => pm_del_val        ,
                                               pm_sbl_val         => pm_sbl_val        ,
                                               pm_enr_typ_val     => pm_enr_typ_val    ,
                                               pm_img_gnr_typ_val => pm_img_gnr_typ_val,
                                               pm_ply_efc_dat     => pm_ply_efc_dat    ,
                                               pm_o_trn_cnx_s     => lv_o_trn_cnx_s    ,
                                               pm_vrb_nam         => pm_vrb_nam        ,
                                               pm_vrb_val         => pm_vrb_val        ,
                                               pm_o_pid_img_p     => lv_o_pid_img_p    );
         --
         -- 30. TRASPASAR propiedad sesion desde variable, conjunto(NFU-352)
         lv_vod := dl_trn_vrb.f_uld_vrb_ses (pm_ses_val => pm_o_trn_cnx_s.ses_val);
         --
      EXCEPTION
         --
         WHEN nwt_o.e_trn.ERR
         THEN
            --
            NULL;
            --
         WHEN OTHERS
         THEN
            --
            IF lv_o_pid_img_p IS NULL
            THEN
               --
               lv_o_pid_img_p := dl_pid_img.f_inl_p;
               --
            END IF;
            --
            -- APILAR error (NFU-42)
            dl_trn_err.p_add (pm_err_val     => SQLCODE                           ,
                              pm_err_nam     => SQLERRM                           ,
                              pm_o_trn_err_t => lv_o_pid_img_p.trn_prc_s.trn_err_t);
            --
            dl_trn_dbg.p_set_err (pm_pgm_nam => c_pgm_nam);
            --
         --
      END;
      --
      lv_o_pid_img_p.trn_prc_s.prc_trm_val := bl_trn_cmn.f_trm(pm_cnr_err => lv_o_pid_img_p.trn_prc_s.trn_err_t.COUNT);
      --
      --@ dl_trn_dbg.p_set_mth_trm (pm_pgm_nam => c_pgm_nam          ,
      --@                           pm_mth_nam => 'f_chc_rev_all_och');
      --
      RETURN lv_o_pid_img_p;
      --
   END f_chc_rev_all_och;
   --
END sr_pid_img_pss_can_trn;
/
